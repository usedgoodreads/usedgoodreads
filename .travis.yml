language: generic
sudo: required
dist: bionic

services:
  - docker

cache:
  timeout: 600
  directories:
  - $HOME/.docker/images

matrix:
  fast_finish: true
  include:
    - os: linux

before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update && sudo apt-get -y install docker-ce

  - sudo curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose

  - docker load -i $HOME/.docker/images/images.tar || true

  - cp env/.app.env.example env/.app.env
  - cp env/.postgres.env.example env/.postgres.env

  - docker-compose build

before_cache:
  - docker save -o $HOME/.docker/images/images.tar $(docker images -a -q)

after_success:
  - |
    if [[ $TRAVIS_BRANCH == "master" ]]; then
      echo $APP_DEPLOY_KEY | base64 --decode - > ~/.ssh/id_ed25519
      chmod 600 ~/.ssh/id_ed25519

      ssh-keyscan -t ed25519 "${APP_DEPLOY_HOST}" >> ~/.ssh/known_hosts

      docker tag usedgoodreads/app usedgoodreads/app:production
      docker image save usedgoodreads/app:production | ssh "${APP_DEPLOY_USER}@${APP_DEPLOY_HOST}" "docker image load"

      DOCKER_HOST="ssh://${APP_DEPLOY_USER}@${APP_DEPLOY_HOST}" docker-compose \
        -p production \
        -f docker-compose.yaml \
        -f docker-compose.production.yaml \
        up --detach
    fi

  - |
    if [[ $TRAVIS_BRANCH == "develop" ]]; then
      echo $APP_DEPLOY_KEY | base64 --decode - > ~/.ssh/id_ed25519
      chmod 600 ~/.ssh/id_ed25519

      ssh-keyscan -t ed25519 "${APP_DEPLOY_HOST}" >> ~/.ssh/known_hosts

      docker tag usedgoodreads/app usedgoodreads/app:staging
      docker image save usedgoodreads/app:staging | ssh "${APP_DEPLOY_USER}@${APP_DEPLOY_HOST}" "docker image load"

      DOCKER_HOST="ssh://${APP_DEPLOY_USER}@${APP_DEPLOY_HOST}" docker-compose \
        -p staging \
        -f docker-compose.yaml \
        -f docker-compose.staging.yaml \
        up --detach
    fi
